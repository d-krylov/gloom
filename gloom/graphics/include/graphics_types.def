#ifndef BUFFER_TARGET
#define BUFFER_TARGET(TYPE)
#endif 

#ifndef TEXTURE_TARGET
#define TEXTURE_TARGET(TYPE, D, L)
#endif

#ifndef GLSL_DATA_TYPE
#define GLSL_DATA_TYPE(TYPE, COMPONENTS_COUNT, COMPONENT_SIZE, CORE_TYPE, Y)
#endif

#ifndef PRIMITIVE_KIND
#define PRIMITIVE_KIND(TYPE)
#endif

#ifndef SHADER_KIND
#define SHADER_KIND(TYPE, N)
#endif

#ifndef TEXTURE_FORMAT
#define TEXTURE_FORMAT(X, Y, Z)
#endif

#ifndef ATTACHMENT_TYPE
#define ATTACHMENT_TYPE(X)
#endif

#ifndef BARRIER_BIT
#define BARRIER_BIT(X)
#endif

#ifndef BUFFER_STORAGE
#define BUFFER_STORAGE(X)
#endif

#ifndef BLEND_FACTOR
#define BLEND_FACTOR(X)
#endif

#ifndef SHADER_BIT
#define SHADER_BIT(X)
#endif

#ifndef COMPARASION_FUNCTION
#define COMPARASION_FUNCTION(X)
#endif

#ifndef BLEND_OPERATION
#define BLEND_OPERATION(X)
#endif

#ifndef STENCIL_OPERATION
#define STENCIL_OPERATION(X)
#endif

#ifndef WRAP_MODE
#define WRAP_MODE(X)
#endif

#ifndef MIN_FILTER
#define MIN_FILTER(X)
#endif

#ifndef MAG_FILTER
#define MAG_FILTER(X)
#endif

#ifndef PIXEL_FORMAT
#define PIXEL_FORMAT(X)
#endif

#ifndef PRIMITIVE_DATA_TYPE
#define PRIMITIVE_DATA_TYPE(X)
#endif

#ifndef PIXEL_TYPE
#define PIXEL_TYPE(X)
#endif

#ifndef INDEX_TYPE
#define INDEX_TYPE(X)
#endif

#ifndef MAP_ACCESS
#define MAP_ACCESS(X)
#endif

#ifndef ACCESS
#define ACCESS(X)
#endif

#ifndef POLYGON_MODE
#define POLYGON_MODE(X)
#endif

POLYGON_MODE(POINT)
POLYGON_MODE(LINE)
POLYGON_MODE(FILL)

SHADER_BIT(VERTEX)
SHADER_BIT(TESS_CONTROL)
SHADER_BIT(TESS_EVALUATION)
SHADER_BIT(GEOMETRY)
SHADER_BIT(FRAGMENT)

WRAP_MODE(CLAMP_TO_EDGE)
WRAP_MODE(CLAMP_TO_BORDER)
WRAP_MODE(MIRRORED_REPEAT)
WRAP_MODE(REPEAT)
WRAP_MODE(MIRROR_CLAMP_TO_EDGE)

MIN_FILTER(NEAREST)
MIN_FILTER(LINEAR)
MIN_FILTER(NEAREST_MIPMAP_NEAREST)
MIN_FILTER(LINEAR_MIPMAP_NEAREST)
MIN_FILTER(NEAREST_MIPMAP_LINEAR)
MIN_FILTER(LINEAR_MIPMAP_LINEAR)

MAG_FILTER(NEAREST)
MAG_FILTER(LINEAR)

COMPARASION_FUNCTION(NEVER)
COMPARASION_FUNCTION(LESS)
COMPARASION_FUNCTION(EQUAL)
COMPARASION_FUNCTION(LEQUAL)
COMPARASION_FUNCTION(GREATER)
COMPARASION_FUNCTION(NOTEQUAL)
COMPARASION_FUNCTION(GEQUAL)
COMPARASION_FUNCTION(ALWAYS)

PRIMITIVE_DATA_TYPE(BYTE)
PRIMITIVE_DATA_TYPE(UNSIGNED_BYTE)
PRIMITIVE_DATA_TYPE(SHORT)
PRIMITIVE_DATA_TYPE(UNSIGNED_SHORT)
PRIMITIVE_DATA_TYPE(INT)
PRIMITIVE_DATA_TYPE(UNSIGNED_INT)
PRIMITIVE_DATA_TYPE(FLOAT)
PRIMITIVE_DATA_TYPE(DOUBLE)

PIXEL_TYPE(BYTE)
PIXEL_TYPE(UNSIGNED_BYTE)
PIXEL_TYPE(SHORT)
PIXEL_TYPE(UNSIGNED_SHORT)
PIXEL_TYPE(INT)
PIXEL_TYPE(UNSIGNED_INT)
PIXEL_TYPE(FLOAT)

INDEX_TYPE(UNSIGNED_BYTE)
INDEX_TYPE(UNSIGNED_SHORT)
INDEX_TYPE(UNSIGNED_INT)

GLSL_DATA_TYPE(BOOL,        1,  1, UNSIGNED_BYTE,    bool)
GLSL_DATA_TYPE(FLOAT,       1,  4, FLOAT,            float)
GLSL_DATA_TYPE(DOUBLE,      1,  8, DOUBLE,           double)
GLSL_DATA_TYPE(INT,         1,  4, INT,              int)
GLSL_DATA_TYPE(UNSIGNED,    1,  4, UNSIGNED_INT,     uint)
GLSL_DATA_TYPE(BVECTOR2,    2,  1, UNSIGNED_BYTE,    bvec2)
GLSL_DATA_TYPE(BVECTOR3,    3,  1, UNSIGNED_BYTE,    bvec3)
GLSL_DATA_TYPE(BVECTOR4,    4,  1, UNSIGNED_BYTE,    bvec4)
GLSL_DATA_TYPE(IVECTOR2,    2,  4, INT,              ivec2)
GLSL_DATA_TYPE(IVECTOR3,    3,  4, INT,              ivec3)
GLSL_DATA_TYPE(IVECTOR4,    4,  4, INT,              ivec4)
GLSL_DATA_TYPE(UVECTOR2,    2,  4, UNSIGNED_INT,     uvec2)
GLSL_DATA_TYPE(UVECTOR3,    3,  4, UNSIGNED_INT,     uvec3)
GLSL_DATA_TYPE(UVECTOR4,    4,  4, UNSIGNED_INT,     uvec4)
GLSL_DATA_TYPE(VECTOR2,     2,  4, FLOAT,            vec2)
GLSL_DATA_TYPE(VECTOR3,     3,  4, FLOAT,            vec3)
GLSL_DATA_TYPE(VECTOR4,     4,  4, FLOAT,            vec4)
GLSL_DATA_TYPE(DVECTOR2,    2,  8, DOUBLE,           dvec2)
GLSL_DATA_TYPE(DVECTOR3,    3,  8, DOUBLE,           dvec3)
GLSL_DATA_TYPE(DVECTOR4,    4,  8, DOUBLE,           dvec4)
GLSL_DATA_TYPE(MATRIX23,    6,  4, FLOAT,            mat2x3)
GLSL_DATA_TYPE(MATRIX24,    8,  4, FLOAT,            mat2x4)
GLSL_DATA_TYPE(MATRIX32,    6,  4, FLOAT,            mat3x2)
GLSL_DATA_TYPE(MATRIX34,    12, 4, FLOAT,            mat3x4)
GLSL_DATA_TYPE(MATRIX42,    8,  4, FLOAT,            mat4x2)
GLSL_DATA_TYPE(MATRIX43,    12, 4, FLOAT,            mat4x3)
GLSL_DATA_TYPE(MATRIX2,     4,  4, FLOAT,            mat2)
GLSL_DATA_TYPE(MATRIX3,     9,  4, FLOAT,            mat3)
GLSL_DATA_TYPE(MATRIX4,     16, 4, FLOAT,            mat4)
GLSL_DATA_TYPE(DMATRIX23,   6,  8, DOUBLE,           dmat2x3)
GLSL_DATA_TYPE(DMATRIX24,   8,  8, DOUBLE,           dmat2x4)
GLSL_DATA_TYPE(DMATRIX32,   6,  8, DOUBLE,           dmat3x2)
GLSL_DATA_TYPE(DMATRIX34,   8,  8, DOUBLE,           dmat3x4)
GLSL_DATA_TYPE(DMATRIX42,   8,  8, DOUBLE,           dmat4x2)
GLSL_DATA_TYPE(DMATRIX43,   12, 8, DOUBLE,           dmat4x3)
GLSL_DATA_TYPE(DMATRIX2,    4,  8, DOUBLE,           dmat2)
GLSL_DATA_TYPE(DMATRIX3,    9,  8, DOUBLE,           dmat3)
GLSL_DATA_TYPE(DMATRIX4,    16, 8, DOUBLE,           dmat4)
GLSL_DATA_TYPE(PACKED_RGBA, 4,  1, UNSIGNED_BYTE,    vec4)

BUFFER_TARGET(ARRAY)
BUFFER_TARGET(ATOMIC_COUNTER)
BUFFER_TARGET(COPY_READ)
BUFFER_TARGET(COPY_WRITE)
BUFFER_TARGET(DISPATCH_INDIRECT)
BUFFER_TARGET(DRAW_INDIRECT)
BUFFER_TARGET(ELEMENT_ARRAY)
BUFFER_TARGET(PIXEL_PACK)
BUFFER_TARGET(PIXEL_UNPACK)
BUFFER_TARGET(QUERY)
BUFFER_TARGET(SHADER_STORAGE)
BUFFER_TARGET(TEXTURE)
BUFFER_TARGET(TRANSFORM_FEEDBACK)
BUFFER_TARGET(UNIFORM)

BUFFER_STORAGE(MAP_READ)
BUFFER_STORAGE(MAP_WRITE)
BUFFER_STORAGE(MAP_PERSISTENT)
BUFFER_STORAGE(MAP_COHERENT)
BUFFER_STORAGE(DYNAMIC_STORAGE)
BUFFER_STORAGE(CLIENT_STORAGE)

MAP_ACCESS(READ)
MAP_ACCESS(WRITE)
MAP_ACCESS(PERSISTENT)
MAP_ACCESS(COHERENT)
MAP_ACCESS(INVALIDATE_RANGE)
MAP_ACCESS(INVALIDATE_BUFFER)
MAP_ACCESS(FLUSH_EXPLICIT)
MAP_ACCESS(UNSYNCHRONIZED)

ACCESS(READ_ONLY) 
ACCESS(WRITE_ONLY)
ACCESS(READ_WRITE)

TEXTURE_TARGET(TEXTURE_1D,                   1, false) 
TEXTURE_TARGET(TEXTURE_2D,                   2, false)
TEXTURE_TARGET(TEXTURE_3D,                   3, false) 
TEXTURE_TARGET(TEXTURE_1D_ARRAY,             2, true) 
TEXTURE_TARGET(TEXTURE_2D_ARRAY,             3, true) 
TEXTURE_TARGET(TEXTURE_RECTANGLE,            2, false) 
TEXTURE_TARGET(TEXTURE_CUBE_MAP,             2, false) 
TEXTURE_TARGET(TEXTURE_CUBE_MAP_ARRAY,       3, true) 
TEXTURE_TARGET(TEXTURE_BUFFER,               0, false)
TEXTURE_TARGET(TEXTURE_2D_MULTISAMPLE,       2, false)
TEXTURE_TARGET(TEXTURE_2D_MULTISAMPLE_ARRAY, 3, true)

PRIMITIVE_KIND(POINTS)
PRIMITIVE_KIND(LINE_STRIP)
PRIMITIVE_KIND(LINE_LOOP)
PRIMITIVE_KIND(LINES)
PRIMITIVE_KIND(LINE_STRIP_ADJACENCY)
PRIMITIVE_KIND(LINES_ADJACENCY)
PRIMITIVE_KIND(TRIANGLE_STRIP)
PRIMITIVE_KIND(TRIANGLE_FAN)
PRIMITIVE_KIND(TRIANGLES)
PRIMITIVE_KIND(TRIANGLE_STRIP_ADJACENCY)
PRIMITIVE_KIND(TRIANGLES_ADJACENCY)
PRIMITIVE_KIND(PATCHES)

SHADER_KIND(VERTEX, 0)
SHADER_KIND(TESS_CONTROL, 1)
SHADER_KIND(TESS_EVALUATION, 2)
SHADER_KIND(GEOMETRY, 3)
SHADER_KIND(FRAGMENT, 4)

TEXTURE_FORMAT(R8,                 RED,              UNSIGNED_BYTE)
TEXTURE_FORMAT(R8_SNORM,           RED,              BYTE)	 	 	 
TEXTURE_FORMAT(R16,                RED,              UNSIGNED_SHORT)
TEXTURE_FORMAT(R16_SNORM,          RED,              SHORT)
TEXTURE_FORMAT(RG8,                RG,               UNSIGNED_BYTE)
TEXTURE_FORMAT(RG8_SNORM,          RG,               BYTE)	 	 	 
TEXTURE_FORMAT(RG16,               RG,               UNSIGNED_SHORT)
TEXTURE_FORMAT(RG16_SNORM,         RG,               SHORT) 	 	 
TEXTURE_FORMAT(R3_G3_B2,           RGB,              UNSIGNED_BYTE)
TEXTURE_FORMAT(RGB4,               RGB,              UNSIGNED_BYTE)
TEXTURE_FORMAT(RGB5,               RGB,              UNSIGNED_BYTE)
TEXTURE_FORMAT(RGB8,               RGB,              UNSIGNED_BYTE)
TEXTURE_FORMAT(RGB8_SNORM,         RGB,              BYTE) 
TEXTURE_FORMAT(RGB10,              RGB,              UNSIGNED_SHORT)
TEXTURE_FORMAT(RGB12,              RGB,              UNSIGNED_SHORT)
TEXTURE_FORMAT(RGB16_SNORM,        RGB,              SHORT)	 
TEXTURE_FORMAT(RGBA2,              RGB,              UNSIGNED_BYTE)
TEXTURE_FORMAT(RGBA4,              RGB,              UNSIGNED_BYTE)
TEXTURE_FORMAT(RGB5_A1,            RGBA,             UNSIGNED_BYTE)
TEXTURE_FORMAT(RGBA8,              RGBA,             UNSIGNED_BYTE)
TEXTURE_FORMAT(RGBA8_SNORM,        RGBA,             BYTE)
TEXTURE_FORMAT(RGB10_A2,           RGBA,             INT)
TEXTURE_FORMAT(RGB10_A2UI,         RGBA,             UNSIGNED_INT)
TEXTURE_FORMAT(RGBA12,             RGBA,             SHORT)
TEXTURE_FORMAT(RGBA16,             RGBA,             SHORT)	 
TEXTURE_FORMAT(SRGB8,              RGB,              UNSIGNED_BYTE)
TEXTURE_FORMAT(SRGB8_ALPHA8,       RGBA,             UNSIGNED_BYTE)
TEXTURE_FORMAT(R16F,               RED,              FLOAT)
TEXTURE_FORMAT(RG16F,              RG,               FLOAT)	 	
TEXTURE_FORMAT(RGB16F,             RGB,              FLOAT) 	 
TEXTURE_FORMAT(RGBA16F,            RGBA,             FLOAT)
TEXTURE_FORMAT(R32F,               RED,              FLOAT) 
TEXTURE_FORMAT(RG32F,              RG,               FLOAT)
TEXTURE_FORMAT(RGB32F,             RGB,              FLOAT) 
TEXTURE_FORMAT(RGBA32F,            RGBA,             FLOAT)
TEXTURE_FORMAT(R11F_G11F_B10F,     RGB,              FLOAT)
TEXTURE_FORMAT(RGB9_E5,            RGB,              UNSIGNED_INT)
TEXTURE_FORMAT(R8I,                RED,              BYTE)
TEXTURE_FORMAT(R8UI,               RED,              UNSIGNED_BYTE) 	 
TEXTURE_FORMAT(R16I,               RED,              SHORT)	
TEXTURE_FORMAT(R16UI,              RED,              UNSIGNED_SHORT)
TEXTURE_FORMAT(R32I,               RED,              INT)
TEXTURE_FORMAT(R32UI,              RED,              UNSIGNED_INT)	 	 
TEXTURE_FORMAT(RG8I,               RG,               BYTE) 	 
TEXTURE_FORMAT(RG8UI,              RG,               UNSIGNED_BYTE)	 	 
TEXTURE_FORMAT(RG16I,              RG,               SHORT) 	 
TEXTURE_FORMAT(RG16UI,             RG,               UNSIGNED_SHORT)	 	 
TEXTURE_FORMAT(RG32I,              RG,               INT)	 
TEXTURE_FORMAT(RG32UI,             RG,               UNSIGNED_INT)	 	 	 
TEXTURE_FORMAT(RGB8I,              RGB,              BYTE)	
TEXTURE_FORMAT(RGB8UI,             RGB,              UNSIGNED_BYTE)	
TEXTURE_FORMAT(RGB16I,             RGB,              SHORT)
TEXTURE_FORMAT(RGB16UI,            RGB,              UNSIGNED_SHORT) 	
TEXTURE_FORMAT(RGB32I,             RGB,              INT) 
TEXTURE_FORMAT(RGB32UI,            RGB,              UNSIGNED_INT)	 
TEXTURE_FORMAT(RGBA8I,             RGBA,             BYTE)
TEXTURE_FORMAT(RGBA8UI,            RGBA,             UNSIGNED_BYTE)
TEXTURE_FORMAT(RGBA16UI,           RGBA,             UNSIGNED_SHORT)
TEXTURE_FORMAT(RGBA16I,            RGBA,             SHORT)
TEXTURE_FORMAT(RGBA32I,            RGBA,             INT)
TEXTURE_FORMAT(RGBA32UI,           RGBA,             UNSIGNED_INT)
TEXTURE_FORMAT(DEPTH_COMPONENT32F, DEPTH_COMPONENT,  FLOAT)
TEXTURE_FORMAT(DEPTH_COMPONENT24,  DEPTH_COMPONENT,  UNSIGNED_INT)
TEXTURE_FORMAT(DEPTH_COMPONENT16,  DEPTH_COMPONENT,  UNSIGNED_SHORT)

BLEND_FACTOR(ZERO)
BLEND_FACTOR(ONE)
BLEND_FACTOR(SRC_COLOR)
BLEND_FACTOR(ONE_MINUS_SRC_COLOR)
BLEND_FACTOR(DST_COLOR)
BLEND_FACTOR(ONE_MINUS_DST_COLOR)
BLEND_FACTOR(SRC_ALPHA)
BLEND_FACTOR(ONE_MINUS_SRC_ALPHA)
BLEND_FACTOR(DST_ALPHA)
BLEND_FACTOR(ONE_MINUS_DST_ALPHA)
BLEND_FACTOR(CONSTANT_COLOR)
BLEND_FACTOR(ONE_MINUS_CONSTANT_COLOR)
BLEND_FACTOR(CONSTANT_ALPHA)
BLEND_FACTOR(ONE_MINUS_CONSTANT_ALPHA)
BLEND_FACTOR(SRC_ALPHA_SATURATE)
BLEND_FACTOR(SRC1_COLOR)
BLEND_FACTOR(ONE_MINUS_SRC1_COLOR)
BLEND_FACTOR(SRC1_ALPHA)
BLEND_FACTOR(ONE_MINUS_SRC1_ALPHA)

BLEND_OPERATION(FUNC_ADD)
BLEND_OPERATION(FUNC_SUBTRACT)
BLEND_OPERATION(FUNC_REVERSE_SUBTRACT)
BLEND_OPERATION(MIN)
BLEND_OPERATION(MAX)

PIXEL_FORMAT(RED)
PIXEL_FORMAT(RG)
PIXEL_FORMAT(RGB)
PIXEL_FORMAT(RGBA)
PIXEL_FORMAT(BGR)
PIXEL_FORMAT(BGRA)
PIXEL_FORMAT(DEPTH_COMPONENT)
PIXEL_FORMAT(DEPTH_STENCIL)
PIXEL_FORMAT(STENCIL_INDEX)

ATTACHMENT_TYPE(COLOR_ATTACHMENT0)
ATTACHMENT_TYPE(COLOR_ATTACHMENT1)
ATTACHMENT_TYPE(COLOR_ATTACHMENT2)
ATTACHMENT_TYPE(COLOR_ATTACHMENT3)
ATTACHMENT_TYPE(COLOR_ATTACHMENT4)
ATTACHMENT_TYPE(COLOR_ATTACHMENT5)
ATTACHMENT_TYPE(COLOR_ATTACHMENT6)
ATTACHMENT_TYPE(COLOR_ATTACHMENT7)
ATTACHMENT_TYPE(COLOR_ATTACHMENT8)
ATTACHMENT_TYPE(COLOR_ATTACHMENT9)
ATTACHMENT_TYPE(COLOR_ATTACHMENT10)
ATTACHMENT_TYPE(COLOR_ATTACHMENT11)
ATTACHMENT_TYPE(COLOR_ATTACHMENT12)
ATTACHMENT_TYPE(COLOR_ATTACHMENT13)
ATTACHMENT_TYPE(COLOR_ATTACHMENT14)
ATTACHMENT_TYPE(COLOR_ATTACHMENT15)
ATTACHMENT_TYPE(COLOR_ATTACHMENT16)
ATTACHMENT_TYPE(COLOR_ATTACHMENT17)
ATTACHMENT_TYPE(COLOR_ATTACHMENT18)
ATTACHMENT_TYPE(COLOR_ATTACHMENT19)
ATTACHMENT_TYPE(COLOR_ATTACHMENT20)
ATTACHMENT_TYPE(COLOR_ATTACHMENT21)
ATTACHMENT_TYPE(COLOR_ATTACHMENT22)
ATTACHMENT_TYPE(COLOR_ATTACHMENT23)
ATTACHMENT_TYPE(COLOR_ATTACHMENT24)
ATTACHMENT_TYPE(COLOR_ATTACHMENT25)
ATTACHMENT_TYPE(COLOR_ATTACHMENT26)
ATTACHMENT_TYPE(COLOR_ATTACHMENT27)
ATTACHMENT_TYPE(COLOR_ATTACHMENT28)
ATTACHMENT_TYPE(COLOR_ATTACHMENT29)
ATTACHMENT_TYPE(COLOR_ATTACHMENT30)
ATTACHMENT_TYPE(COLOR_ATTACHMENT31)
ATTACHMENT_TYPE(DEPTH_ATTACHMENT)
ATTACHMENT_TYPE(STENCIL_ATTACHMENT)
ATTACHMENT_TYPE(DEPTH_STENCIL_ATTACHMENT)

BARRIER_BIT(VERTEX_ATTRIB_ARRAY)
BARRIER_BIT(ELEMENT_ARRAY)
BARRIER_BIT(UNIFORM)
BARRIER_BIT(TEXTURE_FETCH)
BARRIER_BIT(SHADER_IMAGE_ACCESS)
BARRIER_BIT(COMMAND)
BARRIER_BIT(PIXEL_BUFFER)
BARRIER_BIT(TEXTURE_UPDATE)
BARRIER_BIT(BUFFER_UPDATE)
BARRIER_BIT(FRAMEBUFFER)
BARRIER_BIT(TRANSFORM_FEEDBACK)
BARRIER_BIT(ATOMIC_COUNTER)
BARRIER_BIT(SHADER_STORAGE)

STENCIL_OPERATION(KEEP)
STENCIL_OPERATION(ZERO)
STENCIL_OPERATION(REPLACE)
STENCIL_OPERATION(INCR)
STENCIL_OPERATION(INCR_WRAP)
STENCIL_OPERATION(DECR)
STENCIL_OPERATION(DECR_WRAP)
STENCIL_OPERATION(INVERT)

#undef POLYGON_MODE
#undef ACCESS
#undef MAP_ACCESS
#undef INDEX_TYPE
#undef PIXEL_TYPE
#undef PRIMITIVE_DATA_TYPE
#undef PIXEL_FORMAT
#undef MAG_FILTER
#undef MIN_FILTER
#undef WRAP_MODE
#undef STENCIL_OPERATION
#undef BLEND_OPERATION
#undef COMPARASION_FUNCTION
#undef SHADER_BIT
#undef BLEND_FACTOR
#undef BUFFER_STORAGE
#undef BARRIER_BIT
#undef ATTACHMENT_TYPE
#undef TEXTURE_FORMAT
#undef SHADER_KIND
#undef PRIMITIVE_KIND
#undef GLSL_DATA_TYPE
#undef TEXTURE_TARGET
#undef BUFFER_TARGET